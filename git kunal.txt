Microsoft Windows [Version 10.0.19045.3448]
(c) Microsoft Corporation. All rights reserved.

C:\Users\win-10>cd documents

C:\Users\win-10\Documents>mkdir kunalGit

C:\Users\win-10\Documents>cd kunalGit

C:\Users\win-10\Documents\kunalGit>echo names.txt
names.txt

C:\Users\win-10\Documents\kunalGit>touch names.txt
'touch' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\win-10\Documents\kunalGit>echo some_text > hello_world.txt

C:\Users\win-10\Documents\kunalGit>echo some_text >names.txt

C:\Users\win-10\Documents\kunalGit>echo >namesv.txt

C:\Users\win-10\Documents\kunalGit>git status
fatal: not a git repository (or any of the parent directories): .git

C:\Users\win-10\Documents\kunalGit>git init
Initialized empty Git repository in C:/Users/win-10/Documents/kunalGit/.git/

C:\Users\win-10\Documents\kunalGit>git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        hello_world.txt
        names.txt
        namesv.txt

nothing added to commit but untracked files present (use "git add" to track)

C:\Users\win-10\Documents\kunalGit>git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

C:\Users\win-10\Documents\kunalGit>git add..
git: 'add..' is not a git command. See 'git --help'.

C:\Users\win-10\Documents\kunalGit>git add hello_world.txt

C:\Users\win-10\Documents\kunalGit>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hello_world.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        names.txt
        namesv.txt


C:\Users\win-10\Documents\kunalGit>git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

C:\Users\win-10\Documents\kunalGit>git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--config-env=<name>=<envvar>] <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

C:\Users\win-10\Documents\kunalGit>clear
'clear' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\win-10\Documents\kunalGit>git clear
git: 'clear' is not a git command. See 'git --help'.

The most similar command is
        clean

C:\Users\win-10\Documents\kunalGit>vi names.txt
'vi' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\win-10\Documents\kunalGit>clear
'clear' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\win-10\Documents\kunalGit>notepad names.txt

C:\Users\win-10\Documents\kunalGit>type names.txt
some_text edit the txt in cmd windows- notepad filename.txt


C:\Users\win-10\Documents\kunalGit>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hello_world.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        names.txt
        namesv.txt


C:\Users\win-10\Documents\kunalGit>git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hello_world.txt
        new file:   names.txt
        new file:   namesv.txt


C:\Users\win-10\Documents\kunalGit>notepad names.txt

C:\Users\win-10\Documents\kunalGit>type names.txt
some_text edit the txt in cmd windows- notepad filename.txt
to add all files in the directory, git add .


C:\Users\win-10\Documents\kunalGit>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hello_world.txt
        new file:   names.txt
        new file:   namesv.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   names.txt


C:\Users\win-10\Documents\kunalGit>git restore names.txt

C:\Users\win-10\Documents\kunalGit>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hello_world.txt
        new file:   names.txt
        new file:   namesv.txt


C:\Users\win-10\Documents\kunalGit>notepad names.txt

C:\Users\win-10\Documents\kunalGit>type names.txt
some_text edit the txt in cmd windows- notepad filename.txt


C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   hello_world.txt
        new file:   names.txt
        new file:   namesv.txt


C:\Users\win-10\Documents\kunalGit>git commit -m "names.txt file modified"
[master (root-commit) e14cbef] names.txt file modified
 3 files changed, 4 insertions(+)
 create mode 100644 hello_world.txt
 create mode 100644 names.txt
 create mode 100644 namesv.txt

C:\Users\win-10\Documents\kunalGit>git log
commit e14cbef3497e986b137870e9464ce671f72a0e95 (HEAD -> master)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>rm -rf names.txt
'rm' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\win-10\Documents\kunalGit>git rm names.txt
rm 'names.txt'

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    names.txt


C:\Users\win-10\Documents\kunalGit>git commit -m "names.txt"
[master 01bee88] names.txt
 1 file changed, 2 deletions(-)
 delete mode 100644 names.txt

C:\Users\win-10\Documents\kunalGit>git log
commit 01bee88f064cd05f14e48912396132d6da3a26f1 (HEAD -> master)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:32:34 2023 +0530

    names.txt

commit e14cbef3497e986b137870e9464ce671f72a0e95
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git status
On branch master
nothing to commit, working tree clean

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master
nothing to commit, working tree clean

C:\Users\win-10\Documents\kunalGit>git stash
No local changes to save

C:\Users\win-10\Documents\kunalGit>echo >stashDemo.txt

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        stashDemo.txt

nothing added to commit but untracked files present (use "git add" to track)

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   stashDemo.txt


C:\Users\win-10\Documents\kunalGit>git log
commit 01bee88f064cd05f14e48912396132d6da3a26f1 (HEAD -> master)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:32:34 2023 +0530

    names.txt

commit e14cbef3497e986b137870e9464ce671f72a0e95
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git reset e14cbef3497e986b137870e9464ce671f72a0e95
Unstaged changes after reset:
D       names.txt

C:\Users\win-10\Documents\kunalGit>git stage
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    names.txt
        new file:   stashDemo.txt


C:\Users\win-10\Documents\kunalGit>git echo >stashDummmy.txt
git: 'echo' is not a git command. See 'git --help'.

The most similar command is
        fetch

C:\Users\win-10\Documents\kunalGit>echo >stachDum.txt

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    names.txt
        new file:   stashDemo.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        stachDum.txt
        stashDummmy.txt


C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    names.txt
        new file:   stachDum.txt
        new file:   stashDemo.txt
        new file:   stashDummmy.txt


C:\Users\win-10\Documents\kunalGit>notepad stachDum.txt

C:\Users\win-10\Documents\kunalGit>echo >stach.txt

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    names.txt
        new file:   stach.txt
        new file:   stachDum.txt
        new file:   stashDemo.txt
        new file:   stashDummmy.txt


C:\Users\win-10\Documents\kunalGit>git stash
Saved working directory and index state WIP on master: e14cbef names.txt file modified

C:\Users\win-10\Documents\kunalGit>git log
commit e14cbef3497e986b137870e9464ce671f72a0e95 (HEAD -> master)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>type names.txt
some_text edit the txt in cmd windows- notepad filename.txt


C:\Users\win-10\Documents\kunalGit>git stash pop
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   stach.txt
        new file:   stachDum.txt
        new file:   stashDemo.txt
        new file:   stashDummmy.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    names.txt

Dropped refs/stash@{0} (75850830d8c7009955c9c4df4d5a0bed4c3be419)

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git stash
Saved working directory and index state WIP on master: e14cbef names.txt file modified

C:\Users\win-10\Documents\kunalGit>git stash clear

C:\Users\win-10\Documents\kunalGit>git remote add origin https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git

C:\Users\win-10\Documents\kunalGit>git remote -v
origin  https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git (fetch)
origin  https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git (push)

C:\Users\win-10\Documents\kunalGit>git branch
* master

C:\Users\win-10\Documents\kunalGit>git push origin master
info: please complete authentication in your browser...
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (5/5), 390 bytes | 195.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git
 * [new branch]      master -> master

C:\Users\win-10\Documents\kunalGit>git branch feature

C:\Users\win-10\Documents\kunalGit>git checkout feature
Switched to branch 'feature'

C:\Users\win-10\Documents\kunalGit>ls
'ls' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\win-10\Documents\kunalGit>git ls
git: 'ls' is not a git command. See 'git --help'.

The most similar command is
        lfs

C:\Users\win-10\Documents\kunalGit>ls
'ls' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\win-10\Documents\kunalGit>git remote -v
origin  https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git (fetch)
origin  https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git (push)

C:\Users\win-10\Documents\kunalGit>git log
commit e14cbef3497e986b137870e9464ce671f72a0e95 (HEAD -> feature, origin/master, master)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git checkout master
Switched to branch 'master'

C:\Users\win-10\Documents\kunalGit>git push origin master
Everything up-to-date

C:\Users\win-10\Documents\kunalGit>echo >garden.txt

C:\Users\win-10\Documents\kunalGit>echo >herb.txt

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   garden.txt
        new file:   herb.txt


C:\Users\win-10\Documents\kunalGit>git commit -m "changes to merge on main branch"
[master 9091e8b] changes to merge on main branch
 2 files changed, 2 insertions(+)
 create mode 100644 garden.txt
 create mode 100644 herb.txt

C:\Users\win-10\Documents\kunalGit>git push origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 267 bytes | 267.00 KiB/s, done.
Total 2 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
remote: This repository moved. Please use the new location:
remote:   https://github.com/InitiaaNovaa/Git_Learning.git
To https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git
   e14cbef..9091e8b  master -> master

C:\Users\win-10\Documents\kunalGit>git log
commit 9091e8b4e98c7b152777039ebf4193355378da17 (HEAD -> master, origin/master)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 23:29:51 2023 +0530

    changes to merge on main branch

commit e14cbef3497e986b137870e9464ce671f72a0e95 (feature)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git merge feature
Already up to date.

C:\Users\win-10\Documents\kunalGit>git checkout feature
Switched to branch 'feature'

C:\Users\win-10\Documents\kunalGit>git merge master
Updating e14cbef..9091e8b
Fast-forward
 garden.txt | 1 +
 herb.txt   | 1 +
 2 files changed, 2 insertions(+)
 create mode 100644 garden.txt
 create mode 100644 herb.txt

C:\Users\win-10\Documents\kunalGit>git push origin master
Everything up-to-date

C:\Users\win-10\Documents\kunalGit>git clone https://github.com/InitiaaNovaa/Git_Learning.git
Cloning into 'Git_Learning'...
remote: Enumerating objects: 7, done.
remote: Counting objects: 100% (7/7), done.
remote: Compressing objects: 100% (4/4), done.
remote: Total 7 (delta 1), reused 7 (delta 1), pack-reused 0
Receiving objects: 100% (7/7), done.
Resolving deltas: 100% (1/1), done.

C:\Users\win-10\Documents\kunalGit>git status
On branch feature
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git_Learning/

nothing added to commit but untracked files present (use "git add" to track)

C:\Users\win-10\Documents\kunalGit>git add Git_Learning/
warning: adding embedded git repository: Git_Learning
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint:   git submodule add <url> Git_Learning
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint:   git rm --cached Git_Learning
hint:
hint: See "git help submodule" for more information.

C:\Users\win-10\Documents\kunalGit>git submodule add https://github.com/InitiaaNovaa/Git_Learning.git Git_Learning
fatal: 'Git_Learning' already exists in the index

C:\Users\win-10\Documents\kunalGit>git branch kunal

C:\Users\win-10\Documents\kunalGit>git checkout kunal
Switched to branch 'kunal'
A       Git_Learning

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git commit -m "Swagatika added this changes"
[kunal 5f61e77] Swagatika added this changes
 1 file changed, 1 insertion(+)
 create mode 160000 Git_Learning

C:\Users\win-10\Documents\kunalGit>git log
commit 5f61e77c36914138465c51b01ce4dba7c3af4671 (HEAD -> kunal)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sun Sep 24 00:04:33 2023 +0530

    Swagatika added this changes

commit 9091e8b4e98c7b152777039ebf4193355378da17 (origin/master, master, feature)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 23:29:51 2023 +0530

    changes to merge on main branch

commit e14cbef3497e986b137870e9464ce671f72a0e95
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git push origin kunal
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 276 bytes | 276.00 KiB/s, done.
Total 2 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
remote: This repository moved. Please use the new location:
remote:   https://github.com/InitiaaNovaa/Git_Learning.git
remote:
remote: Create a pull request for 'kunal' on GitHub by visiting:
remote:      https://github.com/InitiaaNovaa/Git_Learning/pull/new/kunal
remote:
To https://github.com/InitiaaNovaa/Apex_Trigger_Practice.git
 * [new branch]      kunal -> kunal

C:\Users\win-10\Documents\kunalGit>git log
commit 5f61e77c36914138465c51b01ce4dba7c3af4671 (HEAD -> kunal, origin/kunal)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sun Sep 24 00:04:33 2023 +0530

    Swagatika added this changes

commit 9091e8b4e98c7b152777039ebf4193355378da17 (origin/master, master, feature)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 23:29:51 2023 +0530

    changes to merge on main branch

commit e14cbef3497e986b137870e9464ce671f72a0e95
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git reset e14cbef3497e986b137870e9464ce671f72a0e95

C:\Users\win-10\Documents\kunalGit>git status
On branch kunal
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git_Learning/
        garden.txt
        herb.txt

nothing added to commit but untracked files present (use "git add" to track)

C:\Users\win-10\Documents\kunalGit>git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

C:\Users\win-10\Documents\kunalGit>git add .
warning: adding embedded git repository: Git_Learning
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint:   git submodule add <url> Git_Learning
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint:   git rm --cached Git_Learning
hint:
hint: See "git help submodule" for more information.

C:\Users\win-10\Documents\kunalGit>git stash
Saved working directory and index state WIP on kunal: e14cbef names.txt file modified
warning: unable to rmdir 'Git_Learning': Directory not empty

C:\Users\win-10\Documents\kunalGit>git branch temp

C:\Users\win-10\Documents\kunalGit>git checkout temp
Switched to branch 'temp'

C:\Users\win-10\Documents\kunalGit>echo >1

C:\Users\win-10\Documents\kunalGit>git status
On branch temp
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        1
        Git_Learning/

nothing added to commit but untracked files present (use "git add" to track)

C:\Users\win-10\Documents\kunalGit>git add .:git commit -m "1"
error: unknown switch `m'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


C:\Users\win-10\Documents\kunalGit>git add .;git commit -m "1"
error: unknown switch `m'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --sparse              allow updating entries outside of the sparse-checkout cone
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


C:\Users\win-10\Documents\kunalGit>git add .
warning: adding embedded git repository: Git_Learning
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint:   git submodule add <url> Git_Learning
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint:   git rm --cached Git_Learning
hint:
hint: See "git help submodule" for more information.

C:\Users\win-10\Documents\kunalGit>git em --cached Git_Learning
git: 'em' is not a git command. See 'git --help'.

The most similar commands are
        am
        rm

C:\Users\win-10\Documents\kunalGit>git rm --cached Git_Learning
error: the following file has staged content different from both the
file and the HEAD:
    Git_Learning
(use -f to force removal)

C:\Users\win-10\Documents\kunalGit>git rm --cached -f Git_Learning
rm 'Git_Learning'

C:\Users\win-10\Documents\kunalGit>git status
On branch temp
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   1

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Git_Learning/


C:\Users\win-10\Documents\kunalGit>git rm Git_Learning
fatal: pathspec 'Git_Learning' did not match any files

C:\Users\win-10\Documents\kunalGit>echo >1.txt

C:\Users\win-10\Documents\kunalGit>echo add .
add .

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git commit -m "1"
[temp 9cce462] 1
 1 file changed, 1 insertion(+)
 create mode 100644 1.txt

C:\Users\win-10\Documents\kunalGit>echo >2.txt

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git commit -m "2"
[temp ee2df4f] 2
 1 file changed, 1 insertion(+)
 create mode 100644 2.txt

C:\Users\win-10\Documents\kunalGit>echo >3.txt

C:\Users\win-10\Documents\kunalGit>git add .

C:\Users\win-10\Documents\kunalGit>git commit -m "3"
[temp 3f923d0] 3
 1 file changed, 1 insertion(+)
 create mode 100644 3.txt

C:\Users\win-10\Documents\kunalGit>git log
commit 3f923d0fc85937f7b46c379ba729f4fddc2be374 (HEAD -> temp)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sun Sep 24 10:20:09 2023 +0530

    3

commit ee2df4f6793ae33feed2cda691da3be5bfc0d75e
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sun Sep 24 10:19:44 2023 +0530

    2

commit 9cce4625181f8e75babfc307edfa98fe52eb3a88
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sun Sep 24 10:19:10 2023 +0530

    1

commit e14cbef3497e986b137870e9464ce671f72a0e95 (kunal)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git rebase -i 9cce4625181f8e75babfc307edfa98fe52eb3a88
error: could not parse 'e2df4f'
error: invalid line 1: s e2df4f 2
error: cannot 'squash' without a previous commit
You can fix this with 'git rebase --edit-todo' and then run 'git rebase --continue'.
Or you can abort the rebase with 'git rebase --abort'.

C:\Users\win-10\Documents\kunalGit>git rebase -i 9cce4625181f8e75babfc307edfa98fe52eb3a88
fatal: It seems that there is already a rebase-merge directory, and
I wonder if you are in the middle of another rebase.  If that is the
case, please try
        git rebase (--continue | --abort | --skip)
If that is not the case, please
        rm -fr ".git/rebase-merge"
and run me again.  I am stopping in case you still have something
valuable there.


C:\Users\win-10\Documents\kunalGit>git rebase --continue -i 9cce4625181f8e75babfc307edfa98fe52eb3a88
usage: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase> | --keep-base] [<upstream> [<branch>]]
   or: git rebase [-i] [options] [--exec <cmd>] [--onto <newbase>] --root [<branch>]
   or: git rebase --continue | --abort | --skip | --edit-todo

    --onto <revision>     rebase onto given branch instead of upstream
    --keep-base           use the merge-base of upstream and branch as the current base
    --no-verify           allow pre-rebase hook to run
    -q, --quiet           be quiet. implies --no-stat
    -v, --verbose         display a diffstat of what changed upstream
    -n, --no-stat         do not show diffstat of what changed upstream
    --signoff             add a Signed-off-by trailer to each commit
    --committer-date-is-author-date
                          make committer date match author date
    --reset-author-date   ignore author date and use current date
    -C <n>                passed to 'git apply'
    --ignore-whitespace   ignore changes in whitespace
    --whitespace <action> passed to 'git apply'
    -f, --force-rebase    cherry-pick all commits, even if unchanged
    --no-ff               cherry-pick all commits, even if unchanged
    --continue            continue
    --skip                skip current patch and continue
    --abort               abort and check out the original branch
    --quit                abort but keep HEAD where it is
    --edit-todo           edit the todo list during an interactive rebase
    --show-current-patch  show the patch file being applied or merged
    --apply               use apply strategies to rebase
    -m, --merge           use merging strategies to rebase
    -i, --interactive     let the user edit the list of commits to rebase
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --empty <{drop,keep,ask}>
                          how to handle commits that become empty
    --autosquash          move commits that begin with squash!/fixup! under -i
    --update-refs         update branches that point to commits that are being rebased
    -S, --gpg-sign[=<key-id>]
                          GPG-sign commits
    --autostash           automatically stash/stash pop before and after
    -x, --exec <exec>     add exec lines after each commit of the editable list
    -r, --rebase-merges[=<mode>]
                          try to rebase merges instead of skipping them
    --fork-point          use 'merge-base --fork-point' to refine upstream
    -s, --strategy <strategy>
                          use the given merge strategy
    -X, --strategy-option <option>
                          pass the argument through to the merge strategy
    --root                rebase all reachable commits up to the root(s)
    --reschedule-failed-exec
                          automatically re-schedule any `exec` that fails
    --reapply-cherry-picks
                          apply all changes, even those already present upstream


C:\Users\win-10\Documents\kunalGit>git log
commit 9cce4625181f8e75babfc307edfa98fe52eb3a88 (HEAD)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sun Sep 24 10:19:10 2023 +0530

    1

commit e14cbef3497e986b137870e9464ce671f72a0e95 (kunal)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>git reset --hard 9cce4625181f8e75babfc307edfa98fe52eb3a88
HEAD is now at 9cce462 1

C:\Users\win-10\Documents\kunalGit>git log
commit 9cce4625181f8e75babfc307edfa98fe52eb3a88 (HEAD)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sun Sep 24 10:19:10 2023 +0530

    1

commit e14cbef3497e986b137870e9464ce671f72a0e95 (kunal)
Author: Swagatika Padhy <swagatikapadhy01@gmail.com>
Date:   Sat Sep 23 19:27:17 2023 +0530

    names.txt file modified

C:\Users\win-10\Documents\kunalGit>type temp
The system cannot find the file specified.

C:\Users\win-10\Documents\kunalGit>notepad ReadMe.txt

C:\Users\win-10\Documents\kunalGit>